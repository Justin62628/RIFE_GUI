# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'RIFE_GUI_ST.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_RIFEDialog(object):
    def setupUi(self, RIFEDialog):
        RIFEDialog.setObjectName("RIFEDialog")
        RIFEDialog.setWindowModality(QtCore.Qt.WindowModal)
        RIFEDialog.resize(1173, 830)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(RIFEDialog.sizePolicy().hasHeightForWidth())
        RIFEDialog.setSizePolicy(sizePolicy)
        RIFEDialog.setMinimumSize(QtCore.QSize(960, 720))
        RIFEDialog.setMaximumSize(QtCore.QSize(3840, 2160))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../SD/svfi.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        RIFEDialog.setWindowIcon(icon)
        RIFEDialog.setWindowOpacity(13.0)
        self.gridLayout_6 = QtWidgets.QGridLayout(RIFEDialog)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.MainFrame = QtWidgets.QFrame(RIFEDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.MainFrame.sizePolicy().hasHeightForWidth())
        self.MainFrame.setSizePolicy(sizePolicy)
        self.MainFrame.setObjectName("MainFrame")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.MainFrame)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.tabWidget = QtWidgets.QTabWidget(self.MainFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setElideMode(QtCore.Qt.ElideLeft)
        self.tabWidget.setObjectName("tabWidget")
        self.step1 = QtWidgets.QWidget()
        self.step1.setEnabled(True)
        self.step1.setObjectName("step1")
        self.gridLayout_23 = QtWidgets.QGridLayout(self.step1)
        self.gridLayout_23.setObjectName("gridLayout_23")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.InputButton = QtWidgets.QPushButton(self.step1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.InputButton.sizePolicy().hasHeightForWidth())
        self.InputButton.setSizePolicy(sizePolicy)
        self.InputButton.setObjectName("InputButton")
        self.horizontalLayout_12.addWidget(self.InputButton)
        self.InputDirButton = QtWidgets.QPushButton(self.step1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.InputDirButton.sizePolicy().hasHeightForWidth())
        self.InputDirButton.setSizePolicy(sizePolicy)
        self.InputDirButton.setObjectName("InputDirButton")
        self.horizontalLayout_12.addWidget(self.InputDirButton)
        self.OutputButton = QtWidgets.QPushButton(self.step1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OutputButton.sizePolicy().hasHeightForWidth())
        self.OutputButton.setSizePolicy(sizePolicy)
        self.OutputButton.setObjectName("OutputButton")
        self.horizontalLayout_12.addWidget(self.OutputButton)
        self.gridLayout.addLayout(self.horizontalLayout_12, 6, 0, 1, 1)
        self.AllInOne = QtWidgets.QPushButton(self.step1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.AllInOne.sizePolicy().hasHeightForWidth())
        self.AllInOne.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(28)
        self.AllInOne.setFont(font)
        self.AllInOne.setObjectName("AllInOne")
        self.gridLayout.addWidget(self.AllInOne, 11, 0, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.InputFPSReminder = QtWidgets.QLabel(self.step1)
        self.InputFPSReminder.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.InputFPSReminder.setObjectName("InputFPSReminder")
        self.horizontalLayout.addWidget(self.InputFPSReminder)
        self.InputFPS = QtWidgets.QLineEdit(self.step1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.InputFPS.sizePolicy().hasHeightForWidth())
        self.InputFPS.setSizePolicy(sizePolicy)
        self.InputFPS.setDragEnabled(True)
        self.InputFPS.setObjectName("InputFPS")
        self.horizontalLayout.addWidget(self.InputFPS)
        self.InterpExpReminder = QtWidgets.QLabel(self.step1)
        self.InterpExpReminder.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.InterpExpReminder.setObjectName("InterpExpReminder")
        self.horizontalLayout.addWidget(self.InterpExpReminder)
        self.ExpSelecter = MyComboBox(self.step1)
        self.ExpSelecter.setObjectName("ExpSelecter")
        self.ExpSelecter.addItem("")
        self.ExpSelecter.addItem("")
        self.ExpSelecter.addItem("")
        self.ExpSelecter.addItem("")
        self.ExpSelecter.addItem("")
        self.ExpSelecter.addItem("")
        self.horizontalLayout.addWidget(self.ExpSelecter)
        self.OutputFPSReminder = QtWidgets.QLabel(self.step1)
        self.OutputFPSReminder.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.OutputFPSReminder.setObjectName("OutputFPSReminder")
        self.horizontalLayout.addWidget(self.OutputFPSReminder)
        self.OutputFPS = QtWidgets.QLineEdit(self.step1)
        self.OutputFPS.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OutputFPS.sizePolicy().hasHeightForWidth())
        self.OutputFPS.setSizePolicy(sizePolicy)
        self.OutputFPS.setDragEnabled(True)
        self.OutputFPS.setObjectName("OutputFPS")
        self.horizontalLayout.addWidget(self.OutputFPS)
        self.UseAnyFPS = QtWidgets.QCheckBox(self.step1)
        self.UseAnyFPS.setEnabled(True)
        self.UseAnyFPS.setObjectName("UseAnyFPS")
        self.horizontalLayout.addWidget(self.UseAnyFPS)
        self.gridLayout.addLayout(self.horizontalLayout, 10, 0, 1, 1)
        self.OutputFolder = MyLineWidget(self.step1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OutputFolder.sizePolicy().hasHeightForWidth())
        self.OutputFolder.setSizePolicy(sizePolicy)
        self.OutputFolder.setObjectName("OutputFolder")
        self.gridLayout.addWidget(self.OutputFolder, 2, 0, 1, 1)
        self.gridLayout_9 = QtWidgets.QGridLayout()
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.line_3 = QtWidgets.QFrame(self.step1)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.gridLayout_9.addWidget(self.line_3, 0, 0, 1, 2)
        self.ImgOutputChecker = QtWidgets.QCheckBox(self.step1)
        self.ImgOutputChecker.setObjectName("ImgOutputChecker")
        self.gridLayout_9.addWidget(self.ImgOutputChecker, 1, 1, 1, 1)
        self.SaveAudioChecker = QtWidgets.QCheckBox(self.step1)
        self.SaveAudioChecker.setChecked(True)
        self.SaveAudioChecker.setObjectName("SaveAudioChecker")
        self.gridLayout_9.addWidget(self.SaveAudioChecker, 1, 0, 1, 1)
        self.UseNCNNButton = QtWidgets.QCheckBox(self.step1)
        self.UseNCNNButton.setObjectName("UseNCNNButton")
        self.gridLayout_9.addWidget(self.UseNCNNButton, 5, 0, 1, 1)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_12 = QtWidgets.QLabel(self.step1)
        self.label_12.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_12.setObjectName("label_12")
        self.horizontalLayout_6.addWidget(self.label_12)
        self.ExtSelector = MyComboBox(self.step1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ExtSelector.sizePolicy().hasHeightForWidth())
        self.ExtSelector.setSizePolicy(sizePolicy)
        self.ExtSelector.setObjectName("ExtSelector")
        self.ExtSelector.addItem("")
        self.ExtSelector.addItem("")
        self.ExtSelector.addItem("")
        self.horizontalLayout_6.addWidget(self.ExtSelector)
        self.gridLayout_9.addLayout(self.horizontalLayout_6, 5, 1, 1, 1)
        self.gridLayout.addLayout(self.gridLayout_9, 7, 0, 1, 1)
        self.scrollArea = QtWidgets.QScrollArea(self.step1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea.sizePolicy().hasHeightForWidth())
        self.scrollArea.setSizePolicy(sizePolicy)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 1092, 733))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_7 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
        self.label_7.setSizePolicy(sizePolicy)
        self.label_7.setScaledContents(True)
        self.label_7.setWordWrap(True)
        self.label_7.setObjectName("label_7")
        self.verticalLayout_3.addWidget(self.label_7)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout.addWidget(self.scrollArea, 0, 0, 1, 1)
        self.line_4 = QtWidgets.QFrame(self.step1)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.gridLayout.addWidget(self.line_4, 9, 0, 1, 1)
        self.InputFileName = MyListWidget(self.step1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.InputFileName.sizePolicy().hasHeightForWidth())
        self.InputFileName.setSizePolicy(sizePolicy)
        self.InputFileName.setTabKeyNavigation(True)
        self.InputFileName.setDragEnabled(True)
        self.InputFileName.setDragDropOverwriteMode(True)
        self.InputFileName.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)
        self.InputFileName.setObjectName("InputFileName")
        self.gridLayout.addWidget(self.InputFileName, 1, 0, 1, 1)
        self.gridLayout_23.addLayout(self.gridLayout, 0, 0, 1, 1)
        self.tabWidget.addTab(self.step1, "")
        self.step2 = QtWidgets.QWidget()
        self.step2.setObjectName("step2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.step2)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.scrollArea_2 = QtWidgets.QScrollArea(self.step2)
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 1111, 746))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_2)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.groupBox_3 = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_3.sizePolicy().hasHeightForWidth())
        self.groupBox_3.setSizePolicy(sizePolicy)
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.StartFrame = QtWidgets.QLineEdit(self.groupBox_3)
        self.StartFrame.setObjectName("StartFrame")
        self.gridLayout_4.addWidget(self.StartFrame, 2, 2, 1, 1)
        self.StartChunk = QtWidgets.QLineEdit(self.groupBox_3)
        self.StartChunk.setObjectName("StartChunk")
        self.gridLayout_4.addWidget(self.StartChunk, 2, 1, 1, 1)
        self.label = QtWidgets.QLabel(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.gridLayout_4.addWidget(self.label, 1, 2, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.gridLayout_4.addWidget(self.label_2, 1, 1, 1, 1)
        self.AutoSetReminder = QtWidgets.QLabel(self.groupBox_3)
        self.AutoSetReminder.setAlignment(QtCore.Qt.AlignCenter)
        self.AutoSetReminder.setObjectName("AutoSetReminder")
        self.gridLayout_4.addWidget(self.AutoSetReminder, 1, 0, 1, 1)
        self.AutoSet = QtWidgets.QPushButton(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.AutoSet.sizePolicy().hasHeightForWidth())
        self.AutoSet.setSizePolicy(sizePolicy)
        self.AutoSet.setObjectName("AutoSet")
        self.gridLayout_4.addWidget(self.AutoSet, 2, 0, 1, 1)
        self.gridLayout_14.addLayout(self.gridLayout_4, 0, 0, 1, 1)
        self.verticalLayout_6.addWidget(self.groupBox_3)
        self.groupBox_2 = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_2.sizePolicy().hasHeightForWidth())
        self.groupBox_2.setSizePolicy(sizePolicy)
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.gridLayout_15 = QtWidgets.QGridLayout()
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.ScedetChecker = QtWidgets.QCheckBox(self.groupBox_2)
        self.ScedetChecker.setChecked(True)
        self.ScedetChecker.setObjectName("ScedetChecker")
        self.gridLayout_15.addWidget(self.ScedetChecker, 1, 0, 1, 1)
        self.line = QtWidgets.QFrame(self.groupBox_2)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_15.addWidget(self.line, 1, 3, 1, 1)
        self.DupFramesTSelector = MyDoubleSpinBox(self.groupBox_2)
        self.DupFramesTSelector.setMinimum(0.01)
        self.DupFramesTSelector.setMaximum(99.0)
        self.DupFramesTSelector.setProperty("value", 1.0)
        self.DupFramesTSelector.setObjectName("DupFramesTSelector")
        self.gridLayout_15.addWidget(self.DupFramesTSelector, 1, 5, 1, 1)
        self.ScdetSelector = MySpinBox(self.groupBox_2)
        self.ScdetSelector.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ScdetSelector.sizePolicy().hasHeightForWidth())
        self.ScdetSelector.setSizePolicy(sizePolicy)
        self.ScdetSelector.setMinimum(1)
        self.ScdetSelector.setMaximum(999)
        self.ScdetSelector.setProperty("value", 12)
        self.ScdetSelector.setObjectName("ScdetSelector")
        self.gridLayout_15.addWidget(self.ScdetSelector, 1, 1, 1, 1)
        self.DupRmChecker = QtWidgets.QCheckBox(self.groupBox_2)
        self.DupRmChecker.setObjectName("DupRmChecker")
        self.gridLayout_15.addWidget(self.DupRmChecker, 1, 4, 1, 1)
        self.UseFixedScdet = QtWidgets.QCheckBox(self.groupBox_2)
        self.UseFixedScdet.setObjectName("UseFixedScdet")
        self.gridLayout_15.addWidget(self.UseFixedScdet, 1, 2, 1, 1)
        self.gridLayout_13.addLayout(self.gridLayout_15, 0, 0, 1, 1)
        self.verticalLayout_6.addWidget(self.groupBox_2)
        self.groupBox_4 = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_4.sizePolicy().hasHeightForWidth())
        self.groupBox_4.setSizePolicy(sizePolicy)
        self.groupBox_4.setObjectName("groupBox_4")
        self.gridLayout_20 = QtWidgets.QGridLayout(self.groupBox_4)
        self.gridLayout_20.setObjectName("gridLayout_20")
        self.gridLayout_5 = QtWidgets.QGridLayout()
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.CropSettings = QtWidgets.QLineEdit(self.groupBox_4)
        self.CropSettings.setObjectName("CropSettings")
        self.gridLayout_5.addWidget(self.CropSettings, 0, 5, 1, 1)
        self.ResizeSettings = QtWidgets.QLineEdit(self.groupBox_4)
        self.ResizeSettings.setObjectName("ResizeSettings")
        self.gridLayout_5.addWidget(self.ResizeSettings, 0, 3, 1, 1)
        self.ResizeReminder = QtWidgets.QLabel(self.groupBox_4)
        self.ResizeReminder.setObjectName("ResizeReminder")
        self.gridLayout_5.addWidget(self.ResizeReminder, 0, 2, 1, 1)
        self.CropReminder = QtWidgets.QLabel(self.groupBox_4)
        self.CropReminder.setAlignment(QtCore.Qt.AlignCenter)
        self.CropReminder.setObjectName("CropReminder")
        self.gridLayout_5.addWidget(self.CropReminder, 0, 4, 1, 1)
        self.gridLayout_20.addLayout(self.gridLayout_5, 0, 0, 1, 1)
        self.verticalLayout_6.addWidget(self.groupBox_4)
        self.groupBox = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.UseCRF = QtWidgets.QRadioButton(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.UseCRF.sizePolicy().hasHeightForWidth())
        self.UseCRF.setSizePolicy(sizePolicy)
        self.UseCRF.setChecked(True)
        self.UseCRF.setObjectName("UseCRF")
        self.horizontalLayout_7.addWidget(self.UseCRF)
        self.CRFSelector = MySpinBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.CRFSelector.sizePolicy().hasHeightForWidth())
        self.CRFSelector.setSizePolicy(sizePolicy)
        self.CRFSelector.setMinimum(0)
        self.CRFSelector.setMaximum(51)
        self.CRFSelector.setProperty("value", 16)
        self.CRFSelector.setObjectName("CRFSelector")
        self.horizontalLayout_7.addWidget(self.CRFSelector)
        self.UseTargetBitrate = QtWidgets.QRadioButton(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.UseTargetBitrate.sizePolicy().hasHeightForWidth())
        self.UseTargetBitrate.setSizePolicy(sizePolicy)
        self.UseTargetBitrate.setObjectName("UseTargetBitrate")
        self.horizontalLayout_7.addWidget(self.UseTargetBitrate)
        self.BitrateSelector = MyDoubleSpinBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.BitrateSelector.sizePolicy().hasHeightForWidth())
        self.BitrateSelector.setSizePolicy(sizePolicy)
        self.BitrateSelector.setMaximum(1000000.0)
        self.BitrateSelector.setProperty("value", 90.0)
        self.BitrateSelector.setObjectName("BitrateSelector")
        self.horizontalLayout_7.addWidget(self.BitrateSelector)
        self.TargetBitrateMeasure = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.TargetBitrateMeasure.sizePolicy().hasHeightForWidth())
        self.TargetBitrateMeasure.setSizePolicy(sizePolicy)
        self.TargetBitrateMeasure.setObjectName("TargetBitrateMeasure")
        self.horizontalLayout_7.addWidget(self.TargetBitrateMeasure)
        self.HwaccelChecker = QtWidgets.QCheckBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.HwaccelChecker.sizePolicy().hasHeightForWidth())
        self.HwaccelChecker.setSizePolicy(sizePolicy)
        self.HwaccelChecker.setObjectName("HwaccelChecker")
        self.horizontalLayout_7.addWidget(self.HwaccelChecker)
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_7.addWidget(self.label_3)
        self.RenderGapSelector = MySpinBox(self.groupBox)
        self.RenderGapSelector.setMinimum(100)
        self.RenderGapSelector.setMaximum(100000)
        self.RenderGapSelector.setSingleStep(100)
        self.RenderGapSelector.setProperty("value", 1000)
        self.RenderGapSelector.setObjectName("RenderGapSelector")
        self.horizontalLayout_7.addWidget(self.RenderGapSelector)
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy)
        self.label_4.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_7.addWidget(self.label_4)
        self.verticalLayout_5.addLayout(self.horizontalLayout_7)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.EncoderReminder = QtWidgets.QLabel(self.groupBox)
        self.EncoderReminder.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.EncoderReminder.setObjectName("EncoderReminder")
        self.horizontalLayout_4.addWidget(self.EncoderReminder)
        self.EncoderSelector = MyComboBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.EncoderSelector.sizePolicy().hasHeightForWidth())
        self.EncoderSelector.setSizePolicy(sizePolicy)
        self.EncoderSelector.setObjectName("EncoderSelector")
        self.EncoderSelector.addItem("")
        self.EncoderSelector.addItem("")
        self.EncoderSelector.addItem("")
        self.horizontalLayout_4.addWidget(self.EncoderSelector)
        self.PresetReminder = QtWidgets.QLabel(self.groupBox)
        self.PresetReminder.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.PresetReminder.setObjectName("PresetReminder")
        self.horizontalLayout_4.addWidget(self.PresetReminder)
        self.PresetSelector = MyComboBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PresetSelector.sizePolicy().hasHeightForWidth())
        self.PresetSelector.setSizePolicy(sizePolicy)
        self.PresetSelector.setObjectName("PresetSelector")
        self.PresetSelector.addItem("")
        self.horizontalLayout_4.addWidget(self.PresetSelector)
        self.label_11 = QtWidgets.QLabel(self.groupBox)
        self.label_11.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_11.setObjectName("label_11")
        self.horizontalLayout_4.addWidget(self.label_11)
        self.PixFmtSelector = MyComboBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PixFmtSelector.sizePolicy().hasHeightForWidth())
        self.PixFmtSelector.setSizePolicy(sizePolicy)
        self.PixFmtSelector.setObjectName("PixFmtSelector")
        self.PixFmtSelector.addItem("")
        self.horizontalLayout_4.addWidget(self.PixFmtSelector)
        self.verticalLayout_5.addLayout(self.horizontalLayout_4)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_9 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_9.sizePolicy().hasHeightForWidth())
        self.label_9.setSizePolicy(sizePolicy)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_5.addWidget(self.label_9)
        self.QuickExtractChecker = QtWidgets.QCheckBox(self.groupBox)
        self.QuickExtractChecker.setChecked(True)
        self.QuickExtractChecker.setObjectName("QuickExtractChecker")
        self.horizontalLayout_5.addWidget(self.QuickExtractChecker)
        self.slowmotion = QtWidgets.QCheckBox(self.groupBox)
        self.slowmotion.setObjectName("slowmotion")
        self.horizontalLayout_5.addWidget(self.slowmotion)
        self.verticalLayout_4.addLayout(self.horizontalLayout_5)
        self.FFmpegCustomer = QtWidgets.QLineEdit(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FFmpegCustomer.sizePolicy().hasHeightForWidth())
        self.FFmpegCustomer.setSizePolicy(sizePolicy)
        self.FFmpegCustomer.setObjectName("FFmpegCustomer")
        self.verticalLayout_4.addWidget(self.FFmpegCustomer)
        self.verticalLayout_5.addLayout(self.verticalLayout_4)
        self.verticalLayout_6.addWidget(self.groupBox)
        self.groupBox_6 = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_6.sizePolicy().hasHeightForWidth())
        self.groupBox_6.setSizePolicy(sizePolicy)
        self.groupBox_6.setObjectName("groupBox_6")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.groupBox_6)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.FP16Checker = QtWidgets.QCheckBox(self.groupBox_6)
        self.FP16Checker.setAcceptDrops(True)
        self.FP16Checker.setObjectName("FP16Checker")
        self.horizontalLayout_9.addWidget(self.FP16Checker)
        self.ReverseChecker = QtWidgets.QCheckBox(self.groupBox_6)
        self.ReverseChecker.setObjectName("ReverseChecker")
        self.horizontalLayout_9.addWidget(self.ReverseChecker)
        self.verticalLayout_7.addLayout(self.horizontalLayout_9)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.InterpScaleReminder = QtWidgets.QLabel(self.groupBox_6)
        self.InterpScaleReminder.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.InterpScaleReminder.setObjectName("InterpScaleReminder")
        self.horizontalLayout_10.addWidget(self.InterpScaleReminder)
        self.InterpScaleSelector = MyComboBox(self.groupBox_6)
        self.InterpScaleSelector.setObjectName("InterpScaleSelector")
        self.InterpScaleSelector.addItem("")
        self.InterpScaleSelector.addItem("")
        self.InterpScaleSelector.addItem("")
        self.InterpScaleSelector.addItem("")
        self.InterpScaleSelector.addItem("")
        self.horizontalLayout_10.addWidget(self.InterpScaleSelector)
        self.verticalLayout_7.addLayout(self.horizontalLayout_10)
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.label_5 = QtWidgets.QLabel(self.groupBox_6)
        self.label_5.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_11.addWidget(self.label_5)
        self.ModuleSelector = MyComboBox(self.groupBox_6)
        self.ModuleSelector.setObjectName("ModuleSelector")
        self.horizontalLayout_11.addWidget(self.ModuleSelector)
        self.verticalLayout_7.addLayout(self.horizontalLayout_11)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.label_6 = QtWidgets.QLabel(self.groupBox_6)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_8.addWidget(self.label_6)
        self.DiscreteCardSelector = MyComboBox(self.groupBox_6)
        self.DiscreteCardSelector.setObjectName("DiscreteCardSelector")
        self.horizontalLayout_8.addWidget(self.DiscreteCardSelector)
        self.verticalLayout_7.addLayout(self.horizontalLayout_8)
        self.line_2 = QtWidgets.QFrame(self.groupBox_6)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout_7.addWidget(self.line_2)
        self.AMDParametersReminder = QtWidgets.QLabel(self.groupBox_6)
        self.AMDParametersReminder.setObjectName("AMDParametersReminder")
        self.verticalLayout_7.addWidget(self.AMDParametersReminder)
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.label_14 = QtWidgets.QLabel(self.groupBox_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_14.sizePolicy().hasHeightForWidth())
        self.label_14.setSizePolicy(sizePolicy)
        self.label_14.setObjectName("label_14")
        self.horizontalLayout_13.addWidget(self.label_14)
        self.ncnnReadThreadCnt = MySpinBox(self.groupBox_6)
        self.ncnnReadThreadCnt.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ncnnReadThreadCnt.sizePolicy().hasHeightForWidth())
        self.ncnnReadThreadCnt.setSizePolicy(sizePolicy)
        self.ncnnReadThreadCnt.setProperty("value", 2)
        self.ncnnReadThreadCnt.setObjectName("ncnnReadThreadCnt")
        self.horizontalLayout_13.addWidget(self.ncnnReadThreadCnt)
        self.label_8 = QtWidgets.QLabel(self.groupBox_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_8.sizePolicy().hasHeightForWidth())
        self.label_8.setSizePolicy(sizePolicy)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_13.addWidget(self.label_8)
        self.ncnnInterpThreadCnt = MySpinBox(self.groupBox_6)
        self.ncnnInterpThreadCnt.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ncnnInterpThreadCnt.sizePolicy().hasHeightForWidth())
        self.ncnnInterpThreadCnt.setSizePolicy(sizePolicy)
        self.ncnnInterpThreadCnt.setProperty("value", 4)
        self.ncnnInterpThreadCnt.setObjectName("ncnnInterpThreadCnt")
        self.horizontalLayout_13.addWidget(self.ncnnInterpThreadCnt)
        self.label_10 = QtWidgets.QLabel(self.groupBox_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_10.sizePolicy().hasHeightForWidth())
        self.label_10.setSizePolicy(sizePolicy)
        self.label_10.setObjectName("label_10")
        self.horizontalLayout_13.addWidget(self.label_10)
        self.ncnnOutputThreadCnt = MySpinBox(self.groupBox_6)
        self.ncnnOutputThreadCnt.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ncnnOutputThreadCnt.sizePolicy().hasHeightForWidth())
        self.ncnnOutputThreadCnt.setSizePolicy(sizePolicy)
        self.ncnnOutputThreadCnt.setProperty("value", 4)
        self.ncnnOutputThreadCnt.setObjectName("ncnnOutputThreadCnt")
        self.horizontalLayout_13.addWidget(self.ncnnOutputThreadCnt)
        self.label_13 = QtWidgets.QLabel(self.groupBox_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_13.sizePolicy().hasHeightForWidth())
        self.label_13.setSizePolicy(sizePolicy)
        self.label_13.setObjectName("label_13")
        self.horizontalLayout_13.addWidget(self.label_13)
        self.ncnnGPUCnt = MySpinBox(self.groupBox_6)
        self.ncnnGPUCnt.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ncnnGPUCnt.sizePolicy().hasHeightForWidth())
        self.ncnnGPUCnt.setSizePolicy(sizePolicy)
        self.ncnnGPUCnt.setMinimum(1)
        self.ncnnGPUCnt.setMaximum(1)
        self.ncnnGPUCnt.setObjectName("ncnnGPUCnt")
        self.horizontalLayout_13.addWidget(self.ncnnGPUCnt)
        self.verticalLayout_7.addLayout(self.horizontalLayout_13)
        self.verticalLayout_6.addWidget(self.groupBox_6)
        self.DebugChecker = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_2)
        self.DebugChecker.setObjectName("DebugChecker")
        self.verticalLayout_6.addWidget(self.DebugChecker)
        self.gridLayout_3.addLayout(self.verticalLayout_6, 0, 0, 1, 1)
        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_2)
        self.gridLayout_2.addWidget(self.scrollArea_2, 0, 0, 1, 1)
        self.tabWidget.addTab(self.step2, "")
        self.step3 = QtWidgets.QWidget()
        self.step3.setAcceptDrops(True)
        self.step3.setWhatsThis("")
        self.step3.setObjectName("step3")
        self.gridLayout_24 = QtWidgets.QGridLayout(self.step3)
        self.gridLayout_24.setObjectName("gridLayout_24")
        self.gridLayout_8 = QtWidgets.QGridLayout()
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.label_17 = QtWidgets.QLabel(self.step3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_17.sizePolicy().hasHeightForWidth())
        self.label_17.setSizePolicy(sizePolicy)
        self.label_17.setObjectName("label_17")
        self.horizontalLayout_14.addWidget(self.label_17)
        self.progressBar = QtWidgets.QProgressBar(self.step3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.progressBar.sizePolicy().hasHeightForWidth())
        self.progressBar.setSizePolicy(sizePolicy)
        self.progressBar.setMaximum(100)
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.horizontalLayout_14.addWidget(self.progressBar)
        self.gridLayout_8.addLayout(self.horizontalLayout_14, 6, 0, 1, 1)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.gridLayout_8.addLayout(self.horizontalLayout_3, 3, 0, 1, 1)
        self.OptionCheck = MyTextWidget(self.step3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OptionCheck.sizePolicy().hasHeightForWidth())
        self.OptionCheck.setSizePolicy(sizePolicy)
        self.OptionCheck.setAutoFormatting(QtWidgets.QTextEdit.AutoAll)
        self.OptionCheck.setReadOnly(True)
        self.OptionCheck.setObjectName("OptionCheck")
        self.gridLayout_8.addWidget(self.OptionCheck, 1, 0, 2, 2)
        self.label_15 = QtWidgets.QLabel(self.step3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_15.sizePolicy().hasHeightForWidth())
        self.label_15.setSizePolicy(sizePolicy)
        self.label_15.setObjectName("label_15")
        self.gridLayout_8.addWidget(self.label_15, 0, 0, 1, 1)
        self.ProcessStart = QtWidgets.QPushButton(self.step3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ProcessStart.sizePolicy().hasHeightForWidth())
        self.ProcessStart.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.ProcessStart.setFont(font)
        self.ProcessStart.setObjectName("ProcessStart")
        self.gridLayout_8.addWidget(self.ProcessStart, 7, 0, 1, 1)
        self.KillProcButton = QtWidgets.QPushButton(self.step3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.KillProcButton.sizePolicy().hasHeightForWidth())
        self.KillProcButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.KillProcButton.setFont(font)
        self.KillProcButton.setObjectName("KillProcButton")
        self.gridLayout_8.addWidget(self.KillProcButton, 8, 0, 1, 1)
        self.gridLayout_24.addLayout(self.gridLayout_8, 0, 0, 1, 1)
        self.tabWidget.addTab(self.step3, "")
        self.step_optional = QtWidgets.QWidget()
        self.step_optional.setObjectName("step_optional")
        self.gridLayout_19 = QtWidgets.QGridLayout(self.step_optional)
        self.gridLayout_19.setObjectName("gridLayout_19")
        self.gridLayout_16 = QtWidgets.QGridLayout()
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.GifMaker = QtWidgets.QGroupBox(self.step_optional)
        self.GifMaker.setObjectName("GifMaker")
        self.gridLayout_25 = QtWidgets.QGridLayout(self.GifMaker)
        self.gridLayout_25.setObjectName("gridLayout_25")
        self.GifInput = MyLineWidget(self.GifMaker)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.GifInput.sizePolicy().hasHeightForWidth())
        self.GifInput.setSizePolicy(sizePolicy)
        self.GifInput.setDragEnabled(True)
        self.GifInput.setObjectName("GifInput")
        self.gridLayout_25.addWidget(self.GifInput, 0, 0, 1, 1)
        self.GifOutput = MyLineWidget(self.GifMaker)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.GifOutput.sizePolicy().hasHeightForWidth())
        self.GifOutput.setSizePolicy(sizePolicy)
        self.GifOutput.setDragEnabled(True)
        self.GifOutput.setObjectName("GifOutput")
        self.gridLayout_25.addWidget(self.GifOutput, 1, 0, 1, 1)
        self.GifButton = QtWidgets.QPushButton(self.GifMaker)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.GifButton.sizePolicy().hasHeightForWidth())
        self.GifButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.GifButton.setFont(font)
        self.GifButton.setObjectName("GifButton")
        self.gridLayout_25.addWidget(self.GifButton, 2, 0, 1, 1)
        self.gridLayout_16.addWidget(self.GifMaker, 0, 0, 1, 1)
        self.VAConcat = QtWidgets.QGroupBox(self.step_optional)
        self.VAConcat.setObjectName("VAConcat")
        self.gridLayout_26 = QtWidgets.QGridLayout(self.VAConcat)
        self.gridLayout_26.setObjectName("gridLayout_26")
        self.gridLayout_17 = QtWidgets.QGridLayout()
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.ConcatInputV = MyLineWidget(self.VAConcat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ConcatInputV.sizePolicy().hasHeightForWidth())
        self.ConcatInputV.setSizePolicy(sizePolicy)
        self.ConcatInputV.setDragEnabled(True)
        self.ConcatInputV.setObjectName("ConcatInputV")
        self.verticalLayout.addWidget(self.ConcatInputV)
        self.ConcatInputA = MyLineWidget(self.VAConcat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ConcatInputA.sizePolicy().hasHeightForWidth())
        self.ConcatInputA.setSizePolicy(sizePolicy)
        self.ConcatInputA.setDragEnabled(True)
        self.ConcatInputA.setObjectName("ConcatInputA")
        self.verticalLayout.addWidget(self.ConcatInputA)
        self.OutputConcat = MyLineWidget(self.VAConcat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OutputConcat.sizePolicy().hasHeightForWidth())
        self.OutputConcat.setSizePolicy(sizePolicy)
        self.OutputConcat.setDragEnabled(True)
        self.OutputConcat.setObjectName("OutputConcat")
        self.verticalLayout.addWidget(self.OutputConcat)
        self.gridLayout_17.addLayout(self.verticalLayout, 0, 0, 1, 1)
        self.gridLayout_26.addLayout(self.gridLayout_17, 0, 0, 1, 1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.ConcatButton = QtWidgets.QPushButton(self.VAConcat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ConcatButton.sizePolicy().hasHeightForWidth())
        self.ConcatButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.ConcatButton.setFont(font)
        self.ConcatButton.setObjectName("ConcatButton")
        self.horizontalLayout_2.addWidget(self.ConcatButton)
        self.ConcatAllButton = QtWidgets.QPushButton(self.VAConcat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ConcatAllButton.sizePolicy().hasHeightForWidth())
        self.ConcatAllButton.setSizePolicy(sizePolicy)
        self.ConcatAllButton.setObjectName("ConcatAllButton")
        self.horizontalLayout_2.addWidget(self.ConcatAllButton)
        self.gridLayout_26.addLayout(self.horizontalLayout_2, 1, 0, 1, 1)
        self.gridLayout_16.addWidget(self.VAConcat, 1, 0, 1, 1)
        self.gridLayout_19.addLayout(self.gridLayout_16, 0, 0, 1, 1)
        self.tabWidget.addTab(self.step_optional, "")
        self.gridLayout_18.addWidget(self.tabWidget, 3, 0, 1, 1)
        self.gridLayout_6.addWidget(self.MainFrame, 0, 0, 1, 1)

        self.retranslateUi(RIFEDialog)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(RIFEDialog)
        RIFEDialog.setTabOrder(self.tabWidget, self.InputButton)
        RIFEDialog.setTabOrder(self.InputButton, self.InputDirButton)
        RIFEDialog.setTabOrder(self.InputDirButton, self.OutputButton)
        RIFEDialog.setTabOrder(self.OutputButton, self.SaveAudioChecker)
        RIFEDialog.setTabOrder(self.SaveAudioChecker, self.ImgOutputChecker)
        RIFEDialog.setTabOrder(self.ImgOutputChecker, self.UseNCNNButton)
        RIFEDialog.setTabOrder(self.UseNCNNButton, self.InputFPS)
        RIFEDialog.setTabOrder(self.InputFPS, self.ExpSelecter)
        RIFEDialog.setTabOrder(self.ExpSelecter, self.OutputFPS)
        RIFEDialog.setTabOrder(self.OutputFPS, self.AllInOne)
        RIFEDialog.setTabOrder(self.AllInOne, self.AutoSet)
        RIFEDialog.setTabOrder(self.AutoSet, self.ScedetChecker)
        RIFEDialog.setTabOrder(self.ScedetChecker, self.ScdetSelector)
        RIFEDialog.setTabOrder(self.ScdetSelector, self.DupRmChecker)
        RIFEDialog.setTabOrder(self.DupRmChecker, self.DupFramesTSelector)
        RIFEDialog.setTabOrder(self.DupFramesTSelector, self.ResizeSettings)
        RIFEDialog.setTabOrder(self.ResizeSettings, self.CropSettings)
        RIFEDialog.setTabOrder(self.CropSettings, self.UseCRF)
        RIFEDialog.setTabOrder(self.UseCRF, self.CRFSelector)
        RIFEDialog.setTabOrder(self.CRFSelector, self.UseTargetBitrate)
        RIFEDialog.setTabOrder(self.UseTargetBitrate, self.BitrateSelector)
        RIFEDialog.setTabOrder(self.BitrateSelector, self.HwaccelChecker)
        RIFEDialog.setTabOrder(self.HwaccelChecker, self.RenderGapSelector)
        RIFEDialog.setTabOrder(self.RenderGapSelector, self.QuickExtractChecker)
        RIFEDialog.setTabOrder(self.QuickExtractChecker, self.FFmpegCustomer)
        RIFEDialog.setTabOrder(self.FFmpegCustomer, self.FP16Checker)
        RIFEDialog.setTabOrder(self.FP16Checker, self.ModuleSelector)
        RIFEDialog.setTabOrder(self.ModuleSelector, self.ProcessStart)
        RIFEDialog.setTabOrder(self.ProcessStart, self.StartChunk)
        RIFEDialog.setTabOrder(self.StartChunk, self.scrollArea)
        RIFEDialog.setTabOrder(self.scrollArea, self.DebugChecker)
        RIFEDialog.setTabOrder(self.DebugChecker, self.OptionCheck)
        RIFEDialog.setTabOrder(self.OptionCheck, self.InputFileName)
        RIFEDialog.setTabOrder(self.InputFileName, self.KillProcButton)
        RIFEDialog.setTabOrder(self.KillProcButton, self.StartFrame)
        RIFEDialog.setTabOrder(self.StartFrame, self.GifInput)
        RIFEDialog.setTabOrder(self.GifInput, self.GifOutput)
        RIFEDialog.setTabOrder(self.GifOutput, self.GifButton)
        RIFEDialog.setTabOrder(self.GifButton, self.ConcatInputV)
        RIFEDialog.setTabOrder(self.ConcatInputV, self.ConcatInputA)
        RIFEDialog.setTabOrder(self.ConcatInputA, self.OutputConcat)
        RIFEDialog.setTabOrder(self.OutputConcat, self.ConcatButton)
        RIFEDialog.setTabOrder(self.ConcatButton, self.ConcatAllButton)

    def retranslateUi(self, RIFEDialog):
        _translate = QtCore.QCoreApplication.translate
        RIFEDialog.setWindowTitle(_translate("RIFEDialog", "快速补帧"))
        self.InputButton.setText(_translate("RIFEDialog", "点我来输入视频文件（支持批处理）"))
        self.InputDirButton.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>不支持交错图像源处理</p></body></html>"))
        self.InputDirButton.setText(_translate("RIFEDialog", "点我来输入帧/图片序列（支持批处理）"))
        self.OutputButton.setText(_translate("RIFEDialog", "点我来设置输出文件夹"))
        self.AllInOne.setText(_translate("RIFEDialog", "一键补帧"))
        self.InputFPSReminder.setText(_translate("RIFEDialog", "先填写输入帧率："))
        self.InputFPS.setPlaceholderText(_translate("RIFEDialog", "一定要确认输入帧率！"))
        self.InterpExpReminder.setText(_translate("RIFEDialog", "再选择补帧倍率："))
        self.ExpSelecter.setItemText(0, _translate("RIFEDialog", "x2"))
        self.ExpSelecter.setItemText(1, _translate("RIFEDialog", "x4"))
        self.ExpSelecter.setItemText(2, _translate("RIFEDialog", "x8"))
        self.ExpSelecter.setItemText(3, _translate("RIFEDialog", "x16"))
        self.ExpSelecter.setItemText(4, _translate("RIFEDialog", "x32"))
        self.ExpSelecter.setItemText(5, _translate("RIFEDialog", "x64"))
        self.OutputFPSReminder.setText(_translate("RIFEDialog", "最后填写输出帧率："))
        self.OutputFPS.setPlaceholderText(_translate("RIFEDialog", "一定要确认输出帧率"))
        self.UseAnyFPS.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>任意输出帧率：无视输入帧率、补帧倍率，直接生成指定输出帧率的补帧成品。</p><p>比如输入24fps，填写的输出帧率为60，则直接补帧补到60帧，不废话，对标SVP、Dm</p><p><span style=\" font-weight:600;\">PS：动漫优化模式（重复帧移除）将默认开启</span></p><p><span style=\" font-weight:600;\">当前版本不可选</span></p></body></html>"))
        self.UseAnyFPS.setText(_translate("RIFEDialog", "使用任意输出帧率（仅N卡，倍率失效）"))
        self.OutputFolder.setPlaceholderText(_translate("RIFEDialog", "拖入补帧项目输出的文件夹路径（剩余磁盘空间建议20G+）在批处理模式下，\"仅保留输出文件\"模式将被强制启用（会删除所有中间文件，且不支持\"输出图片序列\"功能）"))
        self.ImgOutputChecker.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>输出为图片序列</p><p><span style=\" font-weight:600;\">命名格式:0&gt;8d,如 00000008.png</span></p></body></html>"))
        self.ImgOutputChecker.setText(_translate("RIFEDialog", "输出图片序列(否则输出视频)"))
        self.SaveAudioChecker.setText(_translate("RIFEDialog", "导出带音频"))
        self.UseNCNNButton.setText(_translate("RIFEDialog", "使用A卡或核显？（应该知道自己的显卡是N卡还是A卡还是核显吧？)"))
        self.label_12.setToolTip(_translate("RIFEDialog", "<html><head/><body><p><span style=\" font-weight:600;\">自行百度</span></p></body></html>"))
        self.label_12.setText(_translate("RIFEDialog", "最后选择输出文件格式"))
        self.ExtSelector.setItemText(0, _translate("RIFEDialog", "mp4"))
        self.ExtSelector.setItemText(1, _translate("RIFEDialog", "mkv"))
        self.ExtSelector.setItemText(2, _translate("RIFEDialog", "mov"))
        self.label_7.setText(_translate("RIFEDialog", "<html><head/><body><p><span style=\" font-size:12pt; font-weight:700;\">SVFI黑名单（恶劣行为 截至2021/06/08）：</span></p><p>1.QQ号 𝟑𝟎𝟓𝟐𝟖𝟓𝟏𝟗𝟔𝟔 B站UID 1030955501 傻逼 不解释</p><p>2.QQ号 𝟮𝟯𝟯𝟭𝟮𝟴𝟭𝟱𝟲𝟱 B站常用名：4K贝吉塔特摄 此人多次侮辱开发者 对开发者进行人身攻击 被戳穿后装疯卖傻 往SVFI开发组身上泼脏水 性质极其恶劣</p><p>3.QQ号 𝟭𝟵𝟯𝟵𝟵𝟯𝟮𝟯𝟭𝟬 此人恶劣行为过多 在此指列举部分:人身攻击 泼脏水 网络乞丐 键政 在网络公共场合大声喧哗 出卖色相(本质为卖猪肉) 在B站开直播卖惨等\'笔者在写下这个词条时已经开始头晕恶心 此人性格恶劣程度绝非常人可理解<span style=\" font-family:\'-apple-system\',\'BlinkMacSystemFont\',\'Segoe UI\',\'Helvetica\',\'Arial\',\'sans-serif\',\'Apple Color Emoji\',\'Segoe UI Emoji\'; font-size:16px; color:#24292e; background-color:#ffffff;\">// 6月9号更新 亲口承认开小号发se图炸群 对开发者进行人身威胁 其粉丝组织（群号712880708)极端狂热 誓要踏平任何观点不合的群</span></p><p>4. QQ号 𝟯𝟯𝟲𝟭𝟲𝟮𝟱𝟲𝟴𝟰 常用名huhu,fufu,二刺猿等 在群内分享不当言论 疯狂白嫖 败坏群风</p><p><br/><span style=\" font-size:12pt; font-weight:600;\">必看！！快速补帧流程：（鼠标悬浮在选项上可见帮助信息）</span></p><p>0. 请确保本软件在<span style=\" font-weight:600;\">纯英文、无特殊标点符号及空格的路径</span>下运行</p><p>1. 选择要补帧的文件。可以选择多个视频文件进行批量补帧，也可以选择包括图片序列的文件夹，后者需要手动填写输入帧率</p><p>2. 确认<span style=\" font-weight:600;\">输入和输出</span>帧率</p><p>3. 按“<span style=\" font-weight:600;\">一键补帧</span>”完成补帧操作，也可以在<span style=\" font-size:12pt; font-weight:600;\">高级设置</span>界面设置相关参数，并在输出界面点击<span style=\" font-weight:600;\">开始补帧</span>按钮补帧（A卡补帧需要在高级设置手动设置参数）</p><p>4. 在<span style=\" font-weight:600;\">工具箱</span>一页进行<span style=\" font-weight:600;\">gif制作</span>、<span style=\" font-weight:600;\">音视频合并</span>及<span style=\" font-weight:600;\">已有区块合并（视频合并失败使用）</span></p><p><span style=\" font-weight:600; font-style:italic;\">软件最终解释权归SVFI开发团队所有</span></p><p><span style=\" font-weight:600; font-style:italic;\">其他说明：</span></p><p><span style=\" font-family:\'微软雅黑\',\'Tahoma\',\'宋体\'; font-size:14px; color:#808080;\">本软件 </span><span style=\" font-family:\'微软雅黑\',\'Tahoma\',\'宋体\'; font-size:14px; font-weight:600; color:#808080;\">Squirrel Video Frame Interpolation</span></p><p><span style=\" font-family:\'微软雅黑\',\'Tahoma\',\'宋体\'; font-size:14px; color:#808080;\">是基于</span><span style=\" font-family:\'-apple-system\',\'BlinkMacSystemFont\',\'Segoe UI\',\'Helvetica\',\'Arial\',\'sans-serif\',\'Apple Color Emoji\',\'Segoe UI Emoji\'; font-size:16px; font-weight:600; color:#24292e;\">RIFE: Real-Time Intermediate Flow Estimation for Video Frame Interpolation </span><span style=\" font-family:\'微软雅黑\',\'Tahoma\',\'宋体\'; font-size:14px; color:#808080;\">AI补帧算法的可视化图形界面集成.</span></p><p><span style=\" font-family:\'微软雅黑\',\'Tahoma\',\'宋体\'; font-size:14px; font-weight:600; color:#808080;\">RIFE算法作者</span><span style=\" font-family:\'微软雅黑\',\'Tahoma\',\'宋体\'; font-size:14px; color:#808080;\"> Zhewei Huang, Tianyuan Zhang, Wen Heng, Boxin Shi, Shuchang Zhou </span></p><p><span style=\" font-family:\'微软雅黑\',\'Tahoma\',\'宋体\'; font-size:14px; font-weight:600; color:#808080;\">https://github.com/hzwer/arXiv2020-RIFE</span></p><p><span style=\" font-family:\'微软雅黑\',\'Tahoma\',\'宋体\'; font-size:14px; font-weight:600; color:#808080;\">SVFI作者 </span><span style=\" font-family:\'微软雅黑\',\'Tahoma\',\'宋体\'; font-size:14px; color:#808080;\">YiWeiHuang-stack, Justin62628, ABlyh-LEO, NULL204 </span></p><p><span style=\" font-family:\'微软雅黑\',\'Tahoma\',\'宋体\'; font-size:14px; font-weight:600; color:#808080;\">https://github.com/YiWeiHuang-stack/Squirrel-RIFE</span></p><p><span style=\" font-family:\'微软雅黑\',\'Tahoma\',\'宋体\'; font-size:14px; font-weight:600; color:#808080;\">https://github.com/Justin62628/RIFE_GUI</span></p><p><span style=\" font-family:\'微软雅黑\',\'Tahoma\',\'宋体\'; font-size:14px; color:#808080;\">其中RIFE GUI已与SVFI版本合并</span></p><p><span style=\" font-family:\'微软雅黑\',\'Tahoma\',\'宋体\'; font-size:14px; color:#808080;\">市面上的</span><span style=\" font-family:\'微软雅黑\',\'Tahoma\',\'宋体\'; font-size:14px; font-weight:600; color:#808080;\">SVFI 1.x, RIFE GUI 6.2.x</span><span style=\" font-family:\'微软雅黑\',\'Tahoma\',\'宋体\'; font-size:14px; color:#808080;\">均为旧版本</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.step1), _translate("RIFEDialog", "基础设置"))
        self.groupBox_3.setTitle(_translate("RIFEDialog", "第一步：工作状态恢复。如果你上次的没补完，想继续补，点自动设置就完事了"))
        self.StartFrame.setPlaceholderText(_translate("RIFEDialog", "起始帧数(startframe)"))
        self.StartChunk.setPlaceholderText(_translate("RIFEDialog", "起始块数(chunk)"))
        self.label.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>假如程序补到原视频的第256帧即被终止，那么这里应该指定257</p></body></html>"))
        self.label.setText(_translate("RIFEDialog", "原视频起始帧数："))
        self.label_2.setText(_translate("RIFEDialog", "起始视频块序列数："))
        self.AutoSetReminder.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>根据已经生成的视频块信息进行推算，可能存在重复补帧的情况，但不影响最终结果</p></body></html>"))
        self.AutoSetReminder.setText(_translate("RIFEDialog", "自动设置"))
        self.AutoSet.setText(_translate("RIFEDialog", "点我就完事了"))
        self.groupBox_2.setTitle(_translate("RIFEDialog", "第二步：转场与重复帧识别参数设置，这里两个值都是越低越灵敏，默认值就好，不懂不要碰"))
        self.ScedetChecker.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>若使用固定转场识别(absdiff)</p><p>大量静止画面（如非fps游戏录屏）<span style=\" font-weight:600;\">推荐值10</span></p><p>大量运动画面<span style=\" font-weight:600;\">推荐值10~30</span></p><p><span style=\" font-weight:600;\">2D动画推荐值10</span></p><p>其他场景<span style=\" font-weight:600;\">推荐值10~30</span></p><p>若不使用固定转场识别则不用管，全自动的</p></body></html>"))
        self.ScedetChecker.setText(_translate("RIFEDialog", "开启转场识别？设置灵敏度（值越低越灵敏）"))
        self.DupFramesTSelector.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>值越低，去除的重复帧越少。</p><p><span style=\" font-weight:600;\">推荐值0.3~5.0</span></p></body></html>"))
        self.ScdetSelector.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>若使用固定转场识别(absdiff)</p><p>大量静止画面（如非fps游戏录屏）<span style=\" font-weight:600;\">推荐值10</span></p><p>大量运动画面<span style=\" font-weight:600;\">推荐值10~30</span></p><p><span style=\" font-weight:600;\">2D动画推荐值10</span></p><p>其他场景<span style=\" font-weight:600;\">推荐值10~30</span></p><p>若不使用固定转场识别则不用管，全自动的</p></body></html>"))
        self.DupRmChecker.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>值越低，去除的重复帧越少。</p><p><span style=\" font-weight:600;\">推荐值0.3~5.0</span></p><p>真人/3D实拍<span style=\" font-weight:600;\">：建议值0.5</span></p><p>2D动画：<span style=\" font-weight:600;\">建议值1.0~4.0</span></p></body></html>"))
        self.DupRmChecker.setText(_translate("RIFEDialog", "动漫优化模式（重复帧优化）(仅N卡)"))
        self.UseFixedScdet.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>若使用固定转场识别(absdiff)</p><p>大量静止画面（如非fps游戏录屏）<span style=\" font-weight:600;\">推荐值10</span></p><p>大量运动画面<span style=\" font-weight:600;\">推荐值10~30</span></p><p><span style=\" font-weight:600;\">2D动画推荐值10</span></p><p>其他场景<span style=\" font-weight:600;\">推荐值10~30</span></p><p>若不使用固定转场识别则不用管，全自动的</p></body></html>"))
        self.UseFixedScdet.setText(_translate("RIFEDialog", "固定转场阈值"))
        self.groupBox_4.setTitle(_translate("RIFEDialog", "第三步：先更改分辨率再裁切，鼠标悬浮在输入框上可查看参数说明，注意要填英文标点符号"))
        self.CropSettings.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>视频宽和高的黑边像素个数，如：0:138, 用英文冒号隔开，没有黑边就留空</p><p>注意，这里的像素取决于<span style=\" font-weight:600;\">输出文件分辨率</span></p></body></html>"))
        self.CropSettings.setPlaceholderText(_translate("RIFEDialog", "宽、高黑边像素个数，如0:138，没有就不填！"))
        self.ResizeSettings.setPlaceholderText(_translate("RIFEDialog", "如320x180,高不能为单数,如无需要不要填!!!!"))
        self.ResizeReminder.setText(_translate("RIFEDialog", "  1. 输出文件分辨率 "))
        self.CropReminder.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>视频宽和高的黑边像素个数，如：0:138, 用英文冒号隔开，没有黑边就留空</p><p>注意，这里的像素取决于<span style=\" font-weight:600;\">输出文件分辨率</span></p></body></html>"))
        self.CropReminder.setText(_translate("RIFEDialog", "    2. 黑边宽度   "))
        self.groupBox.setTitle(_translate("RIFEDialog", "第四步：压制参数设置（渲染质量和目标码率二选一）"))
        self.UseCRF.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>0代表无损</p></body></html>"))
        self.UseCRF.setText(_translate("RIFEDialog", "渲染质量CRF："))
        self.UseTargetBitrate.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>目标码率，1pass下不代表实际码率</p></body></html>"))
        self.UseTargetBitrate.setText(_translate("RIFEDialog", " 目标码率："))
        self.TargetBitrateMeasure.setText(_translate("RIFEDialog", "M"))
        self.HwaccelChecker.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>使用<span style=\" font-weight:600;\">ffmpeg</span>的hevc_nvenc或h264_nvenc编码器压制中间产品及成品</p></body></html>"))
        self.HwaccelChecker.setText(_translate("RIFEDialog", "使用硬件编码渲染视频（仅N卡，质量比CPU低）"))
        self.label_3.setText(_translate("RIFEDialog", "单一输出区块大小："))
        self.label_4.setText(_translate("RIFEDialog", "帧    "))
        self.EncoderReminder.setToolTip(_translate("RIFEDialog", "<html><head/><body><p><span style=\" font-weight:600;\">HEVC</span>：高效视频压制格式，用更低的码率获得更优的画面质量。对于配置较低的电脑，解码可能会有困难。4K、HDR、用于收藏的蓝光原盘等内容只推荐使用此编码</p><p><span style=\" font-weight:600;\">H264</span>：非常通用的压制编码，不推荐用于超高清内容</p><p><span style=\" font-weight:600;\">ProRes: </span>剪辑中间格式专用，如果你希望码率越大越好，选这个就完事了</p></body></html>"))
        self.EncoderReminder.setText(_translate("RIFEDialog", "先选择压制编码： "))
        self.EncoderSelector.setItemText(0, _translate("RIFEDialog", "H264/AVC"))
        self.EncoderSelector.setItemText(1, _translate("RIFEDialog", "H265/HEVC"))
        self.EncoderSelector.setItemText(2, _translate("RIFEDialog", "ProRes"))
        self.PresetReminder.setToolTip(_translate("RIFEDialog", "<html><head/><body><p><span style=\" font-weight:600;\">slow的压制质量一般是最好的，速度慢</span></p><p>ll代表low latency，低延迟，速度快，质量不高</p><p>hq代表high quality，相对高质量，但不会比slow高</p><p>其他都是字面意思</p></body></html>"))
        self.PresetReminder.setText(_translate("RIFEDialog", "再选择压制预设："))
        self.PresetSelector.setToolTip(_translate("RIFEDialog", "<html><head/><body><p><span style=\" font-weight:600;\">slow的压制质量一般是最好的，速度慢</span></p><p>ll代表low latency，低延迟，速度快，质量不高</p><p>hq代表high quality，相对高质量，但不会比slow高</p><p>其他都是字面意思</p></body></html>"))
        self.PresetSelector.setCurrentText(_translate("RIFEDialog", "slow"))
        self.PresetSelector.setItemText(0, _translate("RIFEDialog", "slow"))
        self.label_11.setToolTip(_translate("RIFEDialog", "<html><head/><body><p><span style=\" font-weight:600;\">自行百度</span></p></body></html>"))
        self.label_11.setText(_translate("RIFEDialog", "再选择像素格式："))
        self.PixFmtSelector.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>自行百度</p></body></html>"))
        self.PixFmtSelector.setItemText(0, _translate("RIFEDialog", "yuv420p"))
        self.label_9.setText(_translate("RIFEDialog", "自定义ffmpeg压制参数："))
        self.QuickExtractChecker.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>使用ffmpeg内置视频导出图片算法，速度稍快，但可能出现颜色偏差</p></body></html>"))
        self.QuickExtractChecker.setText(_translate("RIFEDialog", "快速拆帧（此项可能导致色差色偏，但速度快）"))
        self.slowmotion.setToolTip(_translate("RIFEDialog", "<html><head/><body><p><span style=\" font-weight:600;\">补帧帧率 = 输入帧率 * 补帧倍率</span></p></body></html>"))
        self.slowmotion.setWhatsThis(_translate("RIFEDialog", "<html><head/><body><p><span style=\" font-weight:600;\">补帧帧率 = 输入帧率 * 补帧倍率</span></p></body></html>"))
        self.slowmotion.setText(_translate("RIFEDialog", "慢动作（要求输出帧率小于补帧帧率）"))
        self.FFmpegCustomer.setPlaceholderText(_translate("RIFEDialog", "用于ffmpeg的压制参数，会替换已有的参数。如输入“-crf 9” 会替换渲染质量的值"))
        self.groupBox_6.setTitle(_translate("RIFEDialog", "第五步：补帧技术设置"))
        self.FP16Checker.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>处理高分辨率视频时，勾选此项可能会导致画面抖动</p></body></html>"))
        self.FP16Checker.setText(_translate("RIFEDialog", "半精度模式（显存不够就勾上，可能会导致画面抖动）"))
        self.ReverseChecker.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>将前一张图片作为补帧的参考，即，<span style=\" font-weight:600;\">从后向前补</span>。</p><p>会比正向光流更流畅，但会严重影响3D动画补帧的高速运动的画面质量</p></body></html>"))
        self.ReverseChecker.setText(_translate("RIFEDialog", "反向光流"))
        self.InterpScaleReminder.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>值越低，画面细节撕裂越少，画面崩坏概率越高；</p><p>值越大，补帧速度越慢，物件消失问题越严重</p><p>不是越大或者越小越好</p><p>分辨率720p以下视频推荐<span style=\" font-weight:600;\">1~2</span></p><p>分辨率4K及以上视频推荐<span style=\" font-weight:600;\">0.25~0.5</span></p><p><span style=\" font-weight:600;\">其余推荐1.0</span></p></body></html>"))
        self.InterpScaleReminder.setText(_translate("RIFEDialog", "补帧精度倍数  "))
        self.InterpScaleSelector.setCurrentText(_translate("RIFEDialog", "1.00"))
        self.InterpScaleSelector.setItemText(0, _translate("RIFEDialog", "1.00"))
        self.InterpScaleSelector.setItemText(1, _translate("RIFEDialog", "0.25"))
        self.InterpScaleSelector.setItemText(2, _translate("RIFEDialog", "0.50"))
        self.InterpScaleSelector.setItemText(3, _translate("RIFEDialog", "2.00"))
        self.InterpScaleSelector.setItemText(4, _translate("RIFEDialog", "4.00"))
        self.label_5.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>默认情况下内置2.1~2.4四种模型</p><p><span style=\" font-weight:600;\">2.3表现最好，3D、2D通用</span></p><p><span style=\" font-weight:600;\">2.1最久远，可能有特别的优化效果</span></p><p><span style=\" font-weight:600;\">2.2中规中矩</span></p><p><span style=\" font-weight:600;\">2.4烂得一批</span></p></body></html>"))
        self.label_5.setText(_translate("RIFEDialog", "使用的补帧模型：（数字越大越新）"))
        self.ModuleSelector.setToolTip(_translate("RIFEDialog", "<html><head/><body><p>默认情况下内置2.1~2.4四种模型</p><p><span style=\" font-weight:600;\">2.3表现最好，3D、2D通用</span></p><p><span style=\" font-weight:600;\">2.1最久远，可能有特别的优化效果</span></p><p><span style=\" font-weight:600;\">2.2中规中矩</span></p><p><span style=\" font-weight:600;\">2.4烂得一批</span></p></body></html>"))
        self.label_6.setText(_translate("RIFEDialog", "选择哪张N卡进行补帧？"))
        self.AMDParametersReminder.setText(_translate("RIFEDialog", "使用A卡进行补帧的参数（请用鼠标在下方输入框上方悬浮以阅读说明）"))
        self.label_14.setText(_translate("RIFEDialog", "读帧线程数"))
        self.label_8.setText(_translate("RIFEDialog", "补帧线程数"))
        self.label_10.setText(_translate("RIFEDialog", "导出线程数"))
        self.label_13.setText(_translate("RIFEDialog", "使用GPU的数量"))
        self.DebugChecker.setText(_translate("RIFEDialog", "Debug"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.step2), _translate("RIFEDialog", "高级设置"))
        self.label_17.setText(_translate("RIFEDialog", "总完成进度"))
        self.OptionCheck.setHtml(_translate("RIFEDialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft YaHei UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'SimSun\';\"><br /></p></body></html>"))
        self.label_15.setText(_translate("RIFEDialog", "<html><head/><body><p><span style=\" font-size:12pt; font-weight:600; color:#000000;\">输出窗口</span><span style=\" font-size:12pt; color:#000000;\">页面，字体的不同颜色意义如下：</span></p><p><span style=\" font-size:10pt; font-weight:600; color:#ff0000;\">红色——错误，请将各页面截图并联系开发团队，群号264023742</span></p><p><span style=\" font-size:10pt; font-weight:600; color:#ffaa00;\">橙色——警告，视频导出可能有问题</span></p><p><span style=\" font-size:10pt; font-weight:600; color:#00aa00;\">绿色——当前任务完成</span></p></body></html>"))
        self.ProcessStart.setText(_translate("RIFEDialog", "开始补帧！"))
        self.KillProcButton.setText(_translate("RIFEDialog", "强制结束补帧进程"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.step3), _translate("RIFEDialog", "输出窗口"))
        self.GifMaker.setTitle(_translate("RIFEDialog", "Gif制作"))
        self.GifInput.setPlaceholderText(_translate("RIFEDialog", "输入视频路径"))
        self.GifOutput.setPlaceholderText(_translate("RIFEDialog", "输出动图(gif)路径"))
        self.GifButton.setText(_translate("RIFEDialog", "  制作！  "))
        self.VAConcat.setTitle(_translate("RIFEDialog", "音视频合并"))
        self.ConcatInputV.setPlaceholderText(_translate("RIFEDialog", "输入视频路径"))
        self.ConcatInputA.setPlaceholderText(_translate("RIFEDialog", "输入音频路径（视频）"))
        self.OutputConcat.setPlaceholderText(_translate("RIFEDialog", "输出视频路径"))
        self.ConcatButton.setText(_translate("RIFEDialog", "  合并！  "))
        self.ConcatAllButton.setText(_translate("RIFEDialog", "合并已有区块"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.step_optional), _translate("RIFEDialog", " 工具箱 "))
from Utils.RIFE_GUI_Custom import MyComboBox, MyDoubleSpinBox, MyLineWidget, MyListWidget, MySpinBox, MyTextWidget
